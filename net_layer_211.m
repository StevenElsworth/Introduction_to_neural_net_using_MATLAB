slider_plot()


function [] = slider_plot()
S.x1 = linspace(0, 1, 200);
S.x2 = linspace(0, 1, 200);

S.figure = figure('units','normalized',...
              'name','');
          
S.axes = axes('unit','normalized',...
          'position',[0.1 0.45 0.8 0.45]);

S.sigmoid = @(x, W, b) 1./(1+exp(-(W*x + b)));

S.W1 = 1;
S.W2 = 1;
S.b1 = 0;
S.W3 = 1;
S.b2 = 0;

xi = [S.x1; S.x2];
Wi = [S.W1, S.W2];
S.plot = imagesc(S.sigmoid(S.sigmoid(xi, Wi, S.b1), S.W3, S.b2));
colorbar

update(S);

S.W1Slider = uicontrol('style','slider',...
               'unit','normalized',...
               'position',[0.1 0.35 0.3 0.005],...
               'min',-30,'max',30,'value', S.W1,...
               'sliderstep',[0.001 0.001],...
               'callback', {@SliderCB, 'W1'}); 
           
txtW1 = uicontrol('Style','text',...
     'unit','normalized',...
               'position',[0.1 0.36 0.3 0.05],...
     'String','W1');
 
S.W2Slider = uicontrol('style','slider',...
               'unit','normalized',...
               'position',[0.1 0.25 0.3 0.01],...
               'min',-30,'max',30,'value', S.W2,...
               'sliderstep',[0.001 0.001],...
               'callback', {@SliderCB, 'W2'}); 
           
txtW2 = uicontrol('Style','text',...
     'unit','normalized',...
               'position',[0.1 0.26 0.3 0.05],...
     'String','W2');
 
S.b1Slider = uicontrol('style','slide',...
               'unit','normalized',...
               'position',[0.1 0.15 0.3 0.01],...
               'min',-30,'max',30,'value', S.b1,...
               'sliderstep',[0.001 0.001],...
               'callback', {@SliderCB, 'b1'});

txtb1 = uicontrol('Style','text',...
     'unit','normalized',...
               'position',[0.1 0.16 0.3 0.05],...
     'String','b1');      
 
 
S.W3Slider = uicontrol('style','slider',...
               'unit','normalized',...
               'position',[0.6 0.35 0.3 0.01],...
               'min',-30,'max',30,'value', S.W3,...
               'sliderstep',[0.01 0.01],...
               'callback', {@SliderCB, 'W3'}); 
           
txtW3 = uicontrol('Style','text',...
     'unit','normalized',...
               'position',[0.6 0.36 0.3 0.05],...
     'String','W3');
  
S.b2Slider = uicontrol('style','slide',...
               'unit','normalized',...
               'position',[0.6 0.25 0.3 0.01],...
               'min',-30,'max',30,'value', S.b2,...
               'sliderstep',[0.01 0.01],...
               'callback', {@SliderCB, 'b2'});

txtb2 = uicontrol('Style','text',...
     'unit','normalized',...
               'position',[0.6 0.26 0.3 0.05],...
     'String','b2');    
 
 
guidata(S.figure, S);  % Store S structure in the figure
end

% Callback for all sliders defined above
function SliderCB(aSlider, EventData, Param)
S = guidata(aSlider);  % Get S structure from the figure
S.(Param) = get(aSlider, 'Value');  % Any of the 'a', 'b', etc. defined
update(S);  % Update the plot values
guidata(aSlider, S);  % Store modified S in figure
end

function update(S)
xi = [S.x1; S.x2];
Wi = [S.W1, S.W2];
y = S.sigmoid(S.sigmoid(xi, Wi, S.b1), S.W3, S.b2);
set(S.plot, 'CData', y);  % Replace old plot with new plotting values
axis square
caxis([-1 1])
title(['y = \sigma(', num2str(S.W3), '\sigma(', num2str(S.W1), 'x_1 + ', num2str(S.W2), 'x_2 + ', num2str(S.b1), ') + ', num2str(S.b2), ')'], 'FontSize', 30)
end